// Import the testing framework
import { test, describe, expect, beforeEach, afterEach } from 'std/testing';

// Simple test
test('addition works correctly', () => {
  expect(2 + 2).toBe(4);
});

// Test with tags
test('multiplication works correctly', ['math', 'unit'], () => {
  expect(2 * 3).toBe(6);
});

// Grouped tests
describe('String operations', () => {
  let testString;
  
  // Setup before each test
  beforeEach(() => {
    testString = 'SmashLang';
  });
  
  // Cleanup after each test
  afterEach(() => {
    testString = null;
  });
  
  test('string length is correct', () => {
    expect(testString.length).toBe(9);
  });
  
  test('string concatenation works', () => {
    expect(testString + ' rocks!').toBe('SmashLang rocks!');
  });
  
  test('string includes method works', () => {
    expect(testString.includes('Smash')).toBeTrue();
    expect(testString.includes('Java')).toBeFalse();
  });
});

// Testing async functions
test('async operations work', async () => {
  const result = await Promise.resolve(42);
  expect(result).toBe(42);
});

// Testing exceptions
test('exception handling works', () => {
  const throwingFunction = () => {
    throw new Error('Test error');
  };
  
  expect(() => throwingFunction()).toThrow();
});
