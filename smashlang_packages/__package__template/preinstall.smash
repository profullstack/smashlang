// preinstall.smash - Example pre-installation script for SmashLang packages

import "stdio/exec";

print("Running pre-installation script...");

// Check for required system dependencies
async fn checkDependencies() {
  try {
    // Example: Check if a specific command is available
    await exec.exec("command -v git", { shell: true });
    print("✓ Git is installed");
  } catch (error) {
    console.warn("⚠ Git is not installed. Some features may not work properly.");
  }
  
  // Example: Check for other dependencies
  try {
    const nodeVersion = await exec.exec("node --version");
    print(`✓ Node.js is installed (${nodeVersion.trim()})`); 
  } catch (error) {
    console.warn("⚠ Node.js is not installed. Some features may not work properly.");
  }
}

// Example: Create necessary directories
async fn setupDirectories() {
  try {
    await exec.exec("mkdir -p ~/.package_name/cache");
    print("✓ Created cache directory");
  } catch (error) {
    console.error("✗ Failed to create cache directory:", error);
  }
}

// Run pre-installation tasks
async fn main() {
  print("Performing pre-installation checks and setup...");
  
  await checkDependencies();
  await setupDirectories();
  
  print("Pre-installation completed successfully.");
}

// Execute the main function
main().catch(error => {
  console.error("Pre-installation failed:", error);
  process.exit(1);
});
