// preinstall.smash - Pre-installation script for FConvert package

// Import required modules
import "fs";

print("Running FConvert pre-installation checks...");

// Function to check if a command exists
fn commandExists(command) {
  try {
    const result = fs.execSync(`command -v ${command}`);
    return result.toString().trim().length > 0;
  } catch (error) {
    return false;
  }
}

// Check for required dependencies
fn checkDependencies() {
  const dependencies = [
    { name: 'ImageMagick', command: 'convert', usedFor: 'image conversion' },
    { name: 'Pandoc', command: 'pandoc', usedFor: 'document conversion' },
    { name: 'FFmpeg', command: 'ffmpeg', usedFor: 'audio and video conversion' }
  ];
  
  const missing = [];
  const installed = [];
  
  for (const dep of dependencies) {
    if (commandExists(dep.command)) {
      installed.push(dep);
    } else {
      missing.push(dep);
    }
  }
  
  // Print installed dependencies
  if (installed.length > 0) {
    print("\nDetected installed dependencies:");
    for (const dep of installed) {
      print(`✓ ${dep.name} (${dep.command}): Available for ${dep.usedFor}`);
    }
  }
  
  // Print missing dependencies and installation instructions
  if (missing.length > 0) {
    print("\nMissing required dependencies:");
    for (const dep of missing) {
      print(`✗ ${dep.name} (${dep.command}): Required for ${dep.usedFor}`);
    }
    
    print("\nInstallation instructions:");
    
    // Detect OS for installation instructions
    const isLinux = process.platform === 'linux';
    const isMac = process.platform === 'darwin';
    const isWindows = process.platform === 'win32';
    
    if (isLinux) {
      // Try to detect Linux distribution
      let isDebian = false;
      let isFedora = false;
      let isArch = false;
      
      try {
        if (fs.existsSync('/etc/debian_version')) {
          isDebian = true;
        } else if (fs.existsSync('/etc/fedora-release')) {
          isFedora = true;
        } else if (fs.existsSync('/etc/arch-release')) {
          isArch = true;
        }
      } catch (error) {
        // Ignore errors in OS detection
      }
      
      if (isDebian) {
        print("Debian/Ubuntu:");
        print("sudo apt-get install imagemagick pandoc ffmpeg");
      } else if (isFedora) {
        print("Fedora:");
        print("sudo dnf install ImageMagick pandoc ffmpeg");
      } else if (isArch) {
        print("Arch Linux:");
        print("sudo pacman -S imagemagick pandoc ffmpeg");
      } else {
        print("Linux (generic):");
        print("Please use your distribution's package manager to install the missing dependencies.");
      }
    } else if (isMac) {
      print("macOS (using Homebrew):");
      print("brew install imagemagick pandoc ffmpeg");
    } else if (isWindows) {
      print("Windows:");
      print("Please download and install the following:");
      print("- ImageMagick: https://imagemagick.org/script/download.php");
      print("- Pandoc: https://pandoc.org/installing.html");
      print("- FFmpeg: https://ffmpeg.org/download.html");
    } else {
      print("Please install the missing dependencies for your operating system.");
    }
  }
  
  return missing.length === 0;
}

// Main function
fn main() {
  print("Checking for required dependencies...");
  
  const allDependenciesInstalled = checkDependencies();
  
  if (allDependenciesInstalled) {
    print("\n✓ All required dependencies are installed.");
    print("Pre-installation checks completed successfully.\n");
  } else {
    print("\n⚠ Some dependencies are missing. FConvert will have limited functionality.");
    print("Please install the missing dependencies for full functionality.\n");
    // We don't exit with an error to allow installation to continue
  }
}

// Run the main function
main();
